plugins {
    id "com.android.application"
    id "kotlin-android"
    id "kotlin-kapt"
    id "com.google.firebase.crashlytics"
    id "com.google.gms.google-services"
    alias libs.plugins.triplet.play
}

kotlin {
    jvmToolchain {
        languageVersion.set(JavaLanguageVersion.of("${libs.versions.java.get()}"))
    }
}

android {
    signingConfigs {
        release {
            keyAlias gradle.ext.storeKeyAlias
            keyPassword gradle.ext.storeKeyAliasPassword
            storeFile file(gradle.ext.storeKeyFile)
            storePassword gradle.ext.storeKeyPassword
        }
    }
    compileSdkVersion androidConfig.compileSdkVersion
    defaultConfig {
        applicationId 'net.thebix.debts'
        minSdkVersion androidConfig.minSdkVersion
        targetSdkVersion androidConfig.targetSdkVersion
        versionCode appVersion.code
        versionName appVersion.name

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
        // region This section is added because com.android.tools.build:gradle:7.4.2 is used
        // this region should be removed completely when plugin is updated to 8.1.0-alpha09 and upper
        // link: https://kotlinlang.org/docs/gradle-configure-project.html#gradle-java-toolchains-support
        compileOptions {
            sourceCompatibility = "${libs.versions.java.get()}"
            targetCompatibility = "${libs.versions.java.get()}"
        }
        // endregion

        println "App Id=$applicationId\nApp code version=${versionCode}\nApp name=$versionName"
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
        }
        release {
            shrinkResources true
            minifyEnabled true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    // used by Room, to test migrations
    sourceSets {
        androidTest.assets.srcDirs +=
                files("$projectDir/schemas".toString())
    }
    namespace 'net.thebix.debts'
    // TODO: enable lint local checks and remove this
    lint {
        abortOnError false
    }
}

dependencies {
    implementation libs.androidx.appcompat
    implementation libs.androidx.constraintlayout
    implementation libs.androidx.core
    implementation libs.google.android.material
    kapt libs.androidx.lifecycle.compiler
    implementation libs.androidx.preference
    implementation platform(libs.firebase.bom)
    implementation libs.firebase.crashlytics
    implementation libs.firebase.analytics
    implementation libs.glide.core
    kapt libs.glide.compiler
    implementation libs.koin
    implementation libs.kotlin.stdlib.jdk8
    debugImplementation libs.leak.canary
    implementation libs.room.runtime
    kapt libs.room.compiler
    implementation libs.room.rxjava2
    testImplementation libs.room.testing
    implementation libs.rxbinding
    implementation libs.rxjava2.rxandroid
    implementation libs.rxjava2.rxjava
    implementation libs.timber

    debugImplementation libs.hyperion.core
    debugImplementation libs.hyperion.attr
    debugImplementation libs.hyperion.build.config
    debugImplementation libs.hyperion.disk
    debugImplementation libs.hyperion.geiger.counter
    debugImplementation libs.hyperion.measurement
    debugImplementation libs.hyperion.phoenix
    debugImplementation libs.hyperion.recorder
    debugImplementation libs.hyperion.shared.preferences
    debugImplementation libs.hyperion.timber
}

import com.github.triplet.gradle.androidpublisher.ReleaseStatus
play {
    releaseName = "Internal track release name"
    // Note: the userFraction is only applicable where releaseStatus=[IN_PROGRESS/HALTED]
    // userFraction = 1.0
    defaultToAppBundles = true
    serviceAccountCredentials = file("google-play-publisher.json")

    // defaults, just to make explicit
    track = "internal"
    releaseStatus = ReleaseStatus.COMPLETED
}
